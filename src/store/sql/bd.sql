SELECT 'CREATE DATABASE auth' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'auth')\gexec
\c auth;

CREATE TABLE status(
	id SERIAL,
	name VARCHAR(40) NOT NULL,
	PRIMARY KEY (id)
);

CREATE TABLE users(
	id SERIAL,
	first_name VARCHAR(80) NOT NULL,
	last_name VARCHAR(80) NOT NULL,
	nick_name VARCHAR(20) NOT NULL UNIQUE,
	pass VARCHAR(255) NOT NULL,
	email VARCHAR(60) NOT NULL UNIQUE,
	date_up TIMESTAMP NOT NULL,
	status_id INT DEFAULT 1,
	PRIMARY KEY (id),
	FOREIGN KEY (status_id)
	REFERENCES status (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE services(
	id SERIAL,
	name VARCHAR(40) NOT NULL UNIQUE,
	url VARCHAR(255) NOT NULL UNIQUE,
	status_id INT DEFAULT 1,
	PRIMARY KEY (id),
	FOREIGN KEY (status_id)
	REFERENCES status (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE sessions(
	id SERIAL,
	device VARCHAR(150) NOT NULL,
	date TIMESTAMP NOT NULL,
	service_id INT,
	status_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (service_id)
	REFERENCES services (id)
	ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (status_id)
	REFERENCES status (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE areas(
	id SERIAL,
	name VARCHAR(40),
	service_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (service_id)
	REFERENCES services (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE roles(
	id SERIAL,
	name VARCHAR(40),
	status_id INT DEFAULT 1,
	PRIMARY KEY (id),
	FOREIGN KEY (status_id)
	REFERENCES status (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE actions(
	id SERIAL,
	name VARCHAR(40) NOT NULL UNIQUE,
	PRIMARY KEY (id)
);

CREATE TABLE entities(
	id SERIAL,
	name VARCHAR(80) NOT NULL UNIQUE,
	PRIMARY KEY (id)
);

CREATE TABLE permissions(
	id SERIAL,
	area_id INT,
	action_id INT,
	entity_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (area_id)
	REFERENCES areas (id)
	ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (action_id)
	REFERENCES actions (id)
	ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (entity_id)
	REFERENCES entities (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE permissions_roles(
	id SERIAL,
	permission_id INT,
	role_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (permission_id)
	REFERENCES permissions (id)
	ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (role_id)
	REFERENCES roles (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE users_roles(
	id SERIAL,
	user_id INT,
	role_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (user_id)
	REFERENCES users (id)
	ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (role_id)
	REFERENCES roles (id)
	ON DELETE RESTRICT ON UPDATE CASCADE
);
